# THEA CVP SPaT Schema
[_settings]
DataType = json
Sequential = False

#-------------------------------------------- Metadata -----------------------------------------
[metadata.schemaVersion]
Type = decimal
EqualsValue = 1

[metadata.recordGeneratedBy]
Type = enum
Values = ["rsu"]

[metadata.recordGeneratedAt]
Type = timestamp
LatestTime = NOW
DateFormat = %Y-%m-%d %H:%M:%S.%f [ET]
PYTZTimeZone = EST

[metadata.logFileName]
Type = string

[metadata.kind]
Type = string
Values = ["out"]

[metadata.psid]
Type = decimal

[metadata.RSUID]
Type = string

[metadata.externalId]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"metadata.externalId"}}]}

[metadata.dataType]
Type = enum
Values = ["spat"]

#-------------------------------------------- Payload -----------------------------------------

#------------ SPAT ---------------
[payload.data.SPAT.timeStamp]
Type = decimal
LowerLimit = 0
UpperLimit = 527040
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.timeStamp"}}]}

[payload.data.SPAT.name]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.name"}}]}

[payload.data.SPAT.intersections.IntersectionState.name]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.name"}}]}

[payload.data.SPAT.intersections.IntersectionState.id.region]
Type = decimal
LowerLimit = 0
UpperLimit = 65535
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.id.region"}}]}

[payload.data.SPAT.intersections.IntersectionState.id.id]
Type = decimal
LowerLimit = 0
UpperLimit = 65535

[payload.data.SPAT.intersections.IntersectionState.revision]
Type = decimal
LowerLimit = 0
UpperLimit = 127

[payload.data.SPAT.intersections.IntersectionState.status]
Type = bitstring
BitStringLength = 16

[payload.data.SPAT.intersections.IntersectionState.moy]
Type = decimal
LowerLimit = 0
UpperLimit = 527040
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.moy"}}]}

[payload.data.SPAT.intersections.IntersectionState.timeStamp]
Type = decimal
LowerLimit = 0
UpperLimit = 65535

[payload.data.SPAT.intersections.IntersectionState.enabledLanes.LaneID.list]
Type = decimal
LowerLimit = 0
UpperLimit = 255
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.enabledLanes.LaneID"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.movementName]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.movementName"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.signalGroup]
Type = decimal
LowerLimit = 0
UpperLimit = 255

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.eventState]
Type = choice
Choices = ["unavailable", "dark", "stop-Then-Proceed", "stop-And-Remain", "pre-Movement", "permissive-Movement-Allowed", "protected-Movement-Allowed", "permissive-clearance", "protected-clearance", "caution-Conflicting-Traffic"]

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.startTime]
Type = decimal
LowerLimit = 0
UpperLimit = 36001
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.startTime"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.minEndTime]
Type = decimal
LowerLimit = 0
UpperLimit = 36001
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.minEndTime"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.maxEndTime]
Type = decimal
LowerLimit = 0
UpperLimit = 36001
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.maxEndTime"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.likelyTime]
Type = decimal
LowerLimit = 0
UpperLimit = 36001
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.likelyTime"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.confidence]
Type = decimal
LowerLimit = 0
UpperLimit = 15
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.confidence"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.nextTime]
Type = decimal
LowerLimit = 0
UpperLimit = 36001
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.timing.nextTime"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.type]
Type = enum
Values = ["none", "greenwave", "ecoDrive", "transit"]
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.type"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.speed]
Type = decimal
LowerLimit = 0
UpperLimit = 500
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.speed"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.confidence]
Type = enum
Values = ["unavailable", "prec100ms", "prec10ms", "prec5ms", "prec1ms", "prec0-1ms", "prec0-05ms", "prec0-01ms"]
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.confidence"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.distance]
Type = decimal
LowerLimit = 0
UpperLimit = 10000
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.distance"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.class]
Type = decimal
LowerLimit = 0
UpperLimit = 255
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.class"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.regional.RegionalExtension]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.speeds.AdvisorySpeed.list.regional.RegionalExtension"}}]}

[payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.regional.RegionalExtension]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.states.MovementState.list.state-time-speed.MovementEvent.regional.RegionalExtension"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.connectionId]
Type = decimal
LowerLimit = 0
UpperLimit = 255
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.connectionId"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.queueLength]
Type = decimal
LowerLimit = 0
UpperLimit = 10000
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.queueLength"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.availableStorageLength]
Type = decimal
LowerLimit = 0
UpperLimit = 10000
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.availableStorageLength"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.waitOnStop]
Type = enum
Values = ["true", "false"]
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.waitOnStop"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.pedBicycleDetect]
Type = enum
Values = ["true", "false"]
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.pedBicycleDetect"}}]}

[payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.regional.RegionalExtension]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.maneuverAssistList.ConnectionManeuverAssist.list.regional.RegionalExtension"}}]}

[payload.data.SPAT.intersections.IntersectionState.regional.RegionalExtension]
Type = string
EqualsValue = {"conditions":[{"ifPart":{"fieldName":"payload.data.SPAT.intersections.IntersectionState.regional.RegionalExtension"}}]}
